<Page
	x:Class="SHCNRSample.MainPage"
	xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
	xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
	xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
	xmlns:local="using:SHCNRSample"
	xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
	xmlns:wctconverters="using:CommunityToolkit.WinUI.Converters"
	mc:Ignorable="d">

	<Page.Resources>
		<ResourceDictionary>
			<wctconverters:EmptyStringToObjectConverter
				x:Key="EmptyStringToVisibilityConverter"
				EmptyValue="Collapsed"
				NotEmptyValue="Visible" />
			<wctconverters:BoolNegationConverter x:Key="BoolNegationConverter" />
		</ResourceDictionary>
	</Page.Resources>

	<Grid>
		<Grid.RowDefinitions>
			<RowDefinition Height="32" />
			<RowDefinition Height="Auto" />
			<RowDefinition Height="*" />
		</Grid.RowDefinitions>

		<StackPanel Grid.Row="0" VerticalAlignment="Center">
			<TextBlock
				Margin="16,0"
				Style="{StaticResource CaptionTextBlockStyle}"
				Text="FolderChangeWatcher" />
		</StackPanel>

		<CommandBar
			Grid.Row="1"
			HorizontalAlignment="Left"
			DefaultLabelPosition="Right"
			IsOpen="False">
			<AppBarButton
				Command="{x:Bind ViewModel.AddFolderCommand}"
				Icon="Add"
				IsEnabled="{x:Bind ViewModel.FolderAdded, Converter={StaticResource BoolNegationConverter}, Mode=OneWay}"
				Label="Add folder" />
			<AppBarButton
				Command="{x:Bind ViewModel.RemoveFolderCommand}"
				Icon="Remove"
				IsEnabled="{x:Bind ViewModel.FolderAdded, Mode=OneWay}"
				Label="Remove folder" />
			<AppBarButton
				Command="{x:Bind ViewModel.StartWatcherCommand}"
				IsEnabled="{x:Bind ViewModel.CanStartWatcher, Mode=OneWay}"
				Label="Start watcher">
				<AppBarButton.Icon>
					<FontIcon Glyph="&#xECC5;" />
				</AppBarButton.Icon>
			</AppBarButton>
			<AppBarButton
				Command="{x:Bind ViewModel.StopWatcherCommand}"
				IsEnabled="{x:Bind ViewModel.CanStopWatcher, Mode=OneWay}"
				Label="Stop watcher">
				<AppBarButton.Icon>
					<FontIcon Glyph="&#xED5A;" />
				</AppBarButton.Icon>
			</AppBarButton>
			<AppBarToggleButton
				Icon="Bookmarks"
				IsChecked="{x:Bind ViewModel.IsRecursive, Mode=TwoWay}"
				Label="Recursive" />
		</CommandBar>

		<ListView
			Grid.Row="2"
			ItemsSource="{x:Bind ViewModel.ItemsGroupableSource.View, Mode=OneWay}"
			ScrollViewer.VerticalScrollBarVisibility="Hidden">

			<ListView.ItemContainerStyle>
				<Style BasedOn="{StaticResource DefaultListViewItemStyle}" TargetType="ListViewItem">
					<Setter Property="VerticalContentAlignment" Value="Center" />
					<Setter Property="Height" Value="80" />
				</Style>
			</ListView.ItemContainerStyle>

			<ListView.ItemsPanel>
				<ItemsPanelTemplate>
					<ItemsStackPanel AreStickyGroupHeadersEnabled="True" />
				</ItemsPanelTemplate>
			</ListView.ItemsPanel>

			<ListView.ItemTemplate>
				<DataTemplate x:DataType="local:ChangeLogItem">
					<Grid ColumnSpacing="12" RowSpacing="2">
						<Grid.RowDefinitions>
							<RowDefinition Height="Auto" />
							<RowDefinition Height="Auto" />
							<RowDefinition Height="Auto" />
						</Grid.RowDefinitions>
						<Grid.ColumnDefinitions>
							<ColumnDefinition Width="Auto" />
							<ColumnDefinition Width="*" />
						</Grid.ColumnDefinitions>
						<FontIcon
							Grid.Row="0"
							Grid.RowSpan="3"
							Grid.Column="0"
							Foreground="{x:Bind NotificationReasonGlyphForeground}"
							Glyph="{x:Bind NotificationReasonGlyph}" />
						<TextBlock
							Grid.Row="0"
							Grid.Column="1"
							Margin="0,0,0,4"
							Style="{StaticResource BodyStrongTextBlockStyle}"
							Text="{x:Bind NotificationReason}" />
						<TextBlock
							Grid.Row="1"
							Grid.Column="1"
							Foreground="{ThemeResource TextFillColorSecondaryBrush}"
							Style="{StaticResource CaptionTextBlockStyle}">
							<Run Text="Before: " /><Run Text="{Binding Target1DisplayName}" />
						</TextBlock>
						<TextBlock
							Grid.Row="2"
							Grid.Column="1"
							Foreground="{ThemeResource TextFillColorSecondaryBrush}"
							Style="{StaticResource CaptionTextBlockStyle}">
							<Run Text="After: " /><Run Text="{Binding Target2DisplayName}" />
						</TextBlock>
					</Grid>
				</DataTemplate>
			</ListView.ItemTemplate>

			<ListView.GroupStyle>
				<GroupStyle>
					<GroupStyle.HeaderTemplate>
						<DataTemplate x:DataType="local:ChangeLogGroupItem">
							<Border>
								<TextBlock
									Margin="4,0"
									VerticalAlignment="Center"
									Foreground="{ThemeResource TextFillColorSecondaryBrush}"
									Style="{ThemeResource BodyStrongTextBlockStyle}"
									Text="{x:Bind Key}" />
							</Border>
						</DataTemplate>
					</GroupStyle.HeaderTemplate>
				</GroupStyle>
			</ListView.GroupStyle>

		</ListView>

		<TextBlock
			x:Name="MessageTextBlock"
			Grid.Row="2"
			HorizontalAlignment="Center"
			VerticalAlignment="Center"
			Style="{StaticResource BodyStrongTextBlockStyle}"
			Text="{x:Bind ViewModel.MessageText, Mode=OneWay}"
			Visibility="{x:Bind ViewModel.MessageText, Converter={StaticResource EmptyStringToVisibilityConverter}, Mode=OneWay}" />

	</Grid>
</Page>
